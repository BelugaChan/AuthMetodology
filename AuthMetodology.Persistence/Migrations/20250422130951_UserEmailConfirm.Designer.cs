// <auto-generated />
using System;
using AuthMetodology.Persistence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AuthMetodology.Persistence.Migrations
{
    [DbContext(typeof(UserDBContext))]
    [Migration("20250422130951_UserEmailConfirm")]
    partial class UserEmailConfirm
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AuthMetodology.Logic.Entities.v1.UserEntityV1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("IdGoogle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("idGoogle");

                    b.Property<bool>("Is2FaEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("is2FAEnabled");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("isEmailConfirmed");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("monkey");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("refreshToken");

                    b.Property<DateTime>("RefreshTokenExpiry")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("refreshTokenExpiry");

                    b.Property<string>("ResetPasswordToken")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("resetPasswordToken");

                    b.Property<DateTime>("ResetPasswordTokenExpiry")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("resetPasswordTokenExpiry");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("userRole");

                    b.HasKey("Id");

                    b.ToTable("auth", "authSchema");
                });
#pragma warning restore 612, 618
        }
    }
}
